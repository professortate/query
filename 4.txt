-- Create tables with primary keys and foreign keys
CREATE TABLE Department (
    D_name VARCHAR(50),
    D_no INT PRIMARY KEY,
    D_Mgr_id INT,
    Mgr_start_date DATE,
    FOREIGN KEY (D_Mgr_id) REFERENCES Employee(Emp_id)
);

CREATE TABLE Employee (
    F_name VARCHAR(50),
    L_name VARCHAR(50),
    Emp_id INT PRIMARY KEY,
    Bdate DATE,
    Address VARCHAR(100),
    Gender CHAR(1),
    Salary INT,
    Super_Emp_id INT,
    D_no INT,
    FOREIGN KEY (Super_Emp_id) REFERENCES Employee(Emp_id),
    FOREIGN KEY (D_no) REFERENCES Department(D_no)
);

CREATE TABLE Dept_Location (
    D_no INT,
    D_location VARCHAR(100),
    PRIMARY KEY (D_no, D_location),
    FOREIGN KEY (D_no) REFERENCES Department(D_no)
);

CREATE TABLE Project (
    P_name VARCHAR(50),
    P_number INT PRIMARY KEY,
    P_location VARCHAR(100),
    D_no INT,
    FOREIGN KEY (D_no) REFERENCES Department(D_no)
);

CREATE TABLE Works_on (
    Emp_id INT,
    P_no INT,
    Hours INT,
    PRIMARY KEY (Emp_id, P_no),
    FOREIGN KEY (Emp_id) REFERENCES Employee(Emp_id),
    FOREIGN KEY (P_no) REFERENCES Project(P_number)
);

CREATE TABLE Dependent (
    Emp_id INT,
    Dependent_name VARCHAR(50),
    Gender CHAR(1),
    Bdate DATE,
    Relationship VARCHAR(50),
    PRIMARY KEY (Emp_id, Dependent_name),
    FOREIGN KEY (Emp_id) REFERENCES Employee(Emp_id)
);

-- Insert records into Department
INSERT INTO Department (D_name, D_no, D_Mgr_id, Mgr_start_date) VALUES
('HR', 1, 101, '2020-01-15'),
('Engineering', 2, 102, '2019-03-01'),
('Marketing', 3, 103, '2021-07-21');

-- Insert records into Employee
INSERT INTO Employee (F_name, L_name, Emp_id, Bdate, Address, Gender, Salary, Super_Emp_id, D_no) VALUES
('Ram', 'Sharma', 101, '1980-01-01', 'Kathmandu', 'M', 50000, NULL, 1),
('Shyam', 'Thapa', 102, '1985-05-15', 'Pokhara', 'M', 60000, NULL, 2),
('Hari', 'Bhandari', 103, '1978-10-20', 'Lalitpur', 'M', 55000, NULL, 3),
('Sita', 'Rai', 104, '1990-02-28', 'Bhaktapur', 'F', 58000, 101, 1),
('Gita', 'Tamang', 105, '1982-11-11', 'Biratnagar', 'F', 62000, 102, 2),
('Krishna', 'Maharjan', 106, '1989-07-04', 'Chitwan', 'M', 61000, 103, 3),
('Radha', 'Gurung', 107, '1991-12-25', 'Nepalgunj', 'F', 48000, 101, 1),
('Laxmi', 'Lama', 108, '1983-03-30', 'Dharan', 'F', 59000, 102, 2),
('Manoj', 'Khadka', 109, '1975-06-17', 'Hetauda', 'M', 53000, 103, 3),
('Sunita', 'Shrestha', 110, '1992-09-09', 'Butwal', 'F', 57000, 101, 1);

-- Insert records into Dept_Location
INSERT INTO Dept_Location (D_no, D_location) VALUES
(1, 'Kathmandu'),
(2, 'Pokhara'),
(3, 'Lalitpur'),
(1, 'Bhaktapur'),
(2, 'Biratnagar'),
(3, 'Chitwan');

-- Insert records into Project
INSERT INTO Project (P_name, P_number, P_location, D_no) VALUES
('Project X', 1, 'Kathmandu', 1),
('Project Y', 2, 'Pokhara', 2),
('Project Z', 3, 'Lalitpur', 3),
('Project A', 4, 'Bhaktapur', 1),
('Project B', 5, 'Biratnagar', 2),
('Project C', 6, 'Chitwan', 3);

-- Insert records into Works_on
INSERT INTO Works_on (Emp_id, P_no, Hours) VALUES
(101, 1, 20),
(102, 2, 15),
(103, 3, 25),
(104, 4, 30),
(105, 5, 10),
(106, 6, 35),
(107, 1, 40),
(108, 2, 20),
(109, 3, 15),
(110, 4, 25);

-- Insert records into Dependent
INSERT INTO Dependent (Emp_id, Dependent_name, Gender, Bdate, Relationship) VALUES
(101, 'Ramesh', 'M', '2010-01-01', 'Son'),
(102, 'Sita', 'F', '2012-05-15', 'Daughter'),
(103, 'Gopal', 'M', '2008-10-20', 'Son'),
(104, 'Radha', 'F', '2014-02-28', 'Daughter'),
(105, 'Hari', 'M', '2009-11-11', 'Son'),
(106, 'Laxmi', 'F', '2013-07-04', 'Daughter'),
(107, 'Ram', 'M', '2011-12-25', 'Son'),
(108, 'Gita', 'F', '2007-03-30', 'Daughter'),
(109, 'Krishna', 'M', '2015-06-17', 'Son'),
(110, 'Mina', 'F', '2016-09-09', 'Daughter');

-- Find the names and address of all employees who work in the same department
SELECT E1.F_name, E1.L_name, E1.Address
FROM Employee E1
JOIN Employee E2 ON E1.D_no = E2.D_no
WHERE E1.Emp_id != E2.Emp_id;

-- Retrieve a list of employees and the projects they are working on, ordered by department and, within each department, ordered alphabetically by last name, then first name
SELECT D.D_name, E.L_name, E.F_name, P.P_name
FROM Employee E
JOIN Works_on W ON E.Emp_id = W.Emp_id
JOIN Project P ON W.P_no = P.P_number
JOIN Department D ON E.D_no = D.D_no
ORDER BY D.D_name, E.L_name, E.F_name;

-- Create a view Dept_info that gives details of department name, number of employees, and total salary of each employee
CREATE VIEW Dept_info AS
SELECT D.D_name, COUNT(E.Emp_id) AS Number_of_Employees, SUM(E.Salary) AS Total_Salary
FROM Department D
JOIN Employee E ON D.D_no = E.D_no
GROUP BY D.D_name;
